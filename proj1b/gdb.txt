Breakpoint 1 at 0x4009e3: file p.c, line 1.
Starting program: /home/shay/a/zhan1442/ece264/ece368/proj1b/a.out 12.txt

Breakpoint 1, main (argc=2, argv=0x7fffffffe3f8) at p.c:36
36		if (argc == 2) {
37			readft(argv[1]);

Program received signal SIGSEGV, Segmentation fault.
0x0000000000401393 in simulation (list=0x0, avg=0.55411255411255411) at p.c:204
204					s -= q1->next->subnum;

Program terminated with signal SIGSEGV, Segmentation fault.
The program no longer exists.
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
Breakpoint 2 at 0x400b9b: file p.c, line 80.
Starting program: /home/shay/a/zhan1442/ece264/ece368/proj1b/a.out 12.txt

Breakpoint 1, main (argc=2, argv=0x7fffffffe3f8) at p.c:36
36		if (argc == 2) {
37			readft(argv[1]);
readft (filename=0x7fffffffe688 "12.txt") at p.c:287
287		double longest = 0;
288		double shortest= 0;
289		double avg = 0.0;  //average CPU time
290		double tot = 0.0;  // total CPU time
291		FILE * fp = NULL;
292		fp = fopen(filename,"r");
_IO_new_fopen (filename=0x7fffffffe688 "12.txt", mode=0x402198 "r") at ../libio/iofopen.c:107
107	  return __fopen_internal (filename, mode, 1);
__fopen_internal (filename=0x7fffffffe688 "12.txt", mode=0x402198 "r", is32=1) at ../libio/iofopen.c:68
68	{
76	  } *new_f = (struct locked_FILE *) malloc (sizeof (struct locked_FILE));
68	{
76	  } *new_f = (struct locked_FILE *) malloc (sizeof (struct locked_FILE));
__libc_malloc (bytes=568) at malloc.c:3619
3619	{
3624	    = force_reg (__malloc_hook);
3625	  if (__builtin_expect (hook != NULL, 0))
3626	    return (*hook)(bytes, RETURN_ADDRESS (0));
3690	}
3626	    return (*hook)(bytes, RETURN_ADDRESS (0));
malloc_hook_ini (sz=568, caller=0x3767a66ecb) at hooks.c:36
36	  __malloc_hook = NULL;
35	{
36	  __malloc_hook = NULL;
37	  ptmalloc_init();
ptmalloc_init () at arena.c:467
467	{
475	  if(__malloc_initialized >= 0) return;
476	  __malloc_initialized = 0;
485	    ptmalloc_init_minimal();
ptmalloc_init_minimal () at arena.c:410
410	  mp_.top_pad        = DEFAULT_TOP_PAD;
412	  mp_.n_mmaps_max    = DEFAULT_MMAP_MAX;
413	  mp_.mmap_threshold = DEFAULT_MMAP_THRESHOLD;
414	  mp_.trim_threshold = DEFAULT_TRIM_THRESHOLD;
415	  mp_.pagesize       = malloc_getpagesize;
__getpagesize () at ../sysdeps/unix/sysv/linux/getpagesize.c:35
35	  if (GLRO(dl_pagesize) != 0)
__getpagesize () at ../sysdeps/unix/sysv/linux/getpagesize.c:51
51	}
ptmalloc_init () at arena.c:519
519	  if (_dl_open_hook != NULL
485	    ptmalloc_init_minimal();
ptmalloc_init_minimal () at arena.c:415
415	  mp_.pagesize       = malloc_getpagesize;
ptmalloc_init () at arena.c:511
511	  main_arena.next = &main_arena;
485	    ptmalloc_init_minimal();
ptmalloc_init_minimal () at arena.c:418
418	  mp_.arena_test     = NARENAS_FROM_NCORES (1);
419	  narenas = 1;
ptmalloc_init () at arena.c:510
510	  mutex_init(&main_arena.mutex);
511	  main_arena.next = &main_arena;
519	  if (_dl_open_hook != NULL
521		  && l->l_ns != LM_ID_BASE))
_dl_addr (address=0x3767a76610, info=0x7fffffffe1b0, mapp=0x7fffffffe1d8, symbolp=0x0) at dl-addr.c:127
127	{
132	  __rtld_lock_lock_recursive (GL(dl_load_lock));
127	{
132	  __rtld_lock_lock_recursive (GL(dl_load_lock));
135	  for (Lmid_t ns = 0; ns < GL(dl_nns); ++ns)
136	    for (struct link_map *l = GL(dl_ns)[ns]._ns_loaded; l; l = l->l_next)
137	      if (addr >= l->l_map_start && addr < l->l_map_end
136	    for (struct link_map *l = GL(dl_ns)[ns]._ns_loaded; l; l = l->l_next)
137	      if (addr >= l->l_map_start && addr < l->l_map_end
136	    for (struct link_map *l = GL(dl_ns)[ns]._ns_loaded; l; l = l->l_next)
137	      if (addr >= l->l_map_start && addr < l->l_map_end
136	    for (struct link_map *l = GL(dl_ns)[ns]._ns_loaded; l; l = l->l_next)
137	      if (addr >= l->l_map_start && addr < l->l_map_end
140		  determine_info (addr, l, info, mapp, symbolp);
determine_info (address=0x3767a76610, info=0x7fffffffe1b0, mapp=0x7fffffffe1d8, symbolp=0x0) at dl-addr.c:31
31	  info->dli_fname = match->l_name;
32	  info->dli_fbase = (void *) match->l_map_start;
35	  if (__builtin_expect (match->l_name[0], 'a') == '\0'
40	    = (const ElfW(Sym) *) D_PTR (match, l_info[DT_SYMTAB]);
46	  if (match->l_info[DT_ADDRTAGIDX (DT_GNU_HASH) + DT_NUM + DT_THISPROCNUM
40	    = (const ElfW(Sym) *) D_PTR (match, l_info[DT_SYMTAB]);
41	  const char *strtab = (const char *) D_PTR (match, l_info[DT_STRTAB]);
43	  ElfW(Word) strtabsize = match->l_info[DT_STRSZ]->d_un.d_val;
46	  if (match->l_info[DT_ADDRTAGIDX (DT_GNU_HASH) + DT_NUM + DT_THISPROCNUM
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
125	_dl_addr (const void *address, Dl_info *info,
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
125	_dl_addr (const void *address, Dl_info *info,
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
The program being debugged has been started already.
Start it from the beginning? (y or n) Starting program: /home/shay/a/zhan1442/ece264/ece368/proj1b/a.out 12.txt

Breakpoint 1, main (argc=2, argv=0x7fffffffe3f8) at p.c:36
36		if (argc == 2) {
37			readft(argv[1]);
readft (filename=0x7fffffffe688 "12.txt") at p.c:287
287		double longest = 0;
288		double shortest= 0;
289		double avg = 0.0;  //average CPU time
290		double tot = 0.0;  // total CPU time
291		FILE * fp = NULL;
292		fp = fopen(filename,"r");
_IO_new_fopen (filename=0x7fffffffe688 "12.txt", mode=0x402198 "r") at ../libio/iofopen.c:107
107	  return __fopen_internal (filename, mode, 1);
__fopen_internal (filename=0x7fffffffe688 "12.txt", mode=0x402198 "r", is32=1) at ../libio/iofopen.c:68
68	{
76	  } *new_f = (struct locked_FILE *) malloc (sizeof (struct locked_FILE));
68	{
76	  } *new_f = (struct locked_FILE *) malloc (sizeof (struct locked_FILE));
__libc_malloc (bytes=568) at malloc.c:3619
3619	{
3624	    = force_reg (__malloc_hook);
3625	  if (__builtin_expect (hook != NULL, 0))
3626	    return (*hook)(bytes, RETURN_ADDRESS (0));
3690	}
3626	    return (*hook)(bytes, RETURN_ADDRESS (0));
malloc_hook_ini (sz=568, caller=0x3767a66ecb) at hooks.c:36
36	  __malloc_hook = NULL;
35	{
36	  __malloc_hook = NULL;
37	  ptmalloc_init();
ptmalloc_init () at arena.c:467
467	{
475	  if(__malloc_initialized >= 0) return;
476	  __malloc_initialized = 0;
485	    ptmalloc_init_minimal();
ptmalloc_init_minimal () at arena.c:410
410	  mp_.top_pad        = DEFAULT_TOP_PAD;
412	  mp_.n_mmaps_max    = DEFAULT_MMAP_MAX;
413	  mp_.mmap_threshold = DEFAULT_MMAP_THRESHOLD;
414	  mp_.trim_threshold = DEFAULT_TRIM_THRESHOLD;
415	  mp_.pagesize       = malloc_getpagesize;
__getpagesize () at ../sysdeps/unix/sysv/linux/getpagesize.c:35
35	  if (GLRO(dl_pagesize) != 0)
__getpagesize () at ../sysdeps/unix/sysv/linux/getpagesize.c:51
51	}
ptmalloc_init () at arena.c:519
519	  if (_dl_open_hook != NULL
485	    ptmalloc_init_minimal();
ptmalloc_init_minimal () at arena.c:415
415	  mp_.pagesize       = malloc_getpagesize;
ptmalloc_init () at arena.c:511
511	  main_arena.next = &main_arena;
485	    ptmalloc_init_minimal();
ptmalloc_init_minimal () at arena.c:418
418	  mp_.arena_test     = NARENAS_FROM_NCORES (1);
419	  narenas = 1;
ptmalloc_init () at arena.c:510
510	  mutex_init(&main_arena.mutex);
511	  main_arena.next = &main_arena;
519	  if (_dl_open_hook != NULL
521		  && l->l_ns != LM_ID_BASE))
_dl_addr (address=0x3767a76610, info=0x7fffffffe1b0, mapp=0x7fffffffe1d8, symbolp=0x0) at dl-addr.c:127
127	{
132	  __rtld_lock_lock_recursive (GL(dl_load_lock));
127	{
132	  __rtld_lock_lock_recursive (GL(dl_load_lock));
135	  for (Lmid_t ns = 0; ns < GL(dl_nns); ++ns)
136	    for (struct link_map *l = GL(dl_ns)[ns]._ns_loaded; l; l = l->l_next)
137	      if (addr >= l->l_map_start && addr < l->l_map_end
136	    for (struct link_map *l = GL(dl_ns)[ns]._ns_loaded; l; l = l->l_next)
137	      if (addr >= l->l_map_start && addr < l->l_map_end
136	    for (struct link_map *l = GL(dl_ns)[ns]._ns_loaded; l; l = l->l_next)
137	      if (addr >= l->l_map_start && addr < l->l_map_end
136	    for (struct link_map *l = GL(dl_ns)[ns]._ns_loaded; l; l = l->l_next)
137	      if (addr >= l->l_map_start && addr < l->l_map_end
140		  determine_info (addr, l, info, mapp, symbolp);
determine_info (address=0x3767a76610, info=0x7fffffffe1b0, mapp=0x7fffffffe1d8, symbolp=0x0) at dl-addr.c:31
31	  info->dli_fname = match->l_name;
32	  info->dli_fbase = (void *) match->l_map_start;
35	  if (__builtin_expect (match->l_name[0], 'a') == '\0'
40	    = (const ElfW(Sym) *) D_PTR (match, l_info[DT_SYMTAB]);
46	  if (match->l_info[DT_ADDRTAGIDX (DT_GNU_HASH) + DT_NUM + DT_THISPROCNUM
40	    = (const ElfW(Sym) *) D_PTR (match, l_info[DT_SYMTAB]);
41	  const char *strtab = (const char *) D_PTR (match, l_info[DT_STRTAB]);
43	  ElfW(Word) strtabsize = match->l_info[DT_STRSZ]->d_un.d_val;
46	  if (match->l_info[DT_ADDRTAGIDX (DT_GNU_HASH) + DT_NUM + DT_THISPROCNUM
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
125	_dl_addr (const void *address, Dl_info *info,
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
125	_dl_addr (const void *address, Dl_info *info,
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
54		  if (symndx != 0)
56		      const Elf32_Word *hasharr = &match->l_gnu_chain_zero[symndx];
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
70			  ++symndx;
72		      while ((*hasharr++ & 1u) == 0);
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
63			       || symtab[symndx].st_value != 0)
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
64			      && ELFW(ST_TYPE) (symtab[symndx].st_info) != STT_TLS
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
65			      && DL_ADDR_SYM_MATCH (match, &symtab[symndx],
62			  if ((symtab[symndx].st_shndx != SHN_UNDEF
72		      while ((*hasharr++ & 1u) == 0);
51	      for (Elf_Symndx bucket = 0; bucket < match->l_nbuckets; ++bucket)
53		  Elf32_Word symndx = match->l_gnu_buckets[bucket];
72		      while ((*hasharr++ & 1u) == 0);
Quit
The program being debugged has been started already.
Start it from the beginning? (y or n) Starting program: /home/shay/a/zhan1442/ece264/ece368/proj1b/a.out 12.txt

Breakpoint 1, main (argc=2, argv=0x7fffffffe3f8) at p.c:36
36		if (argc == 2) {
37			readft(argv[1]);

Breakpoint 2, simulation (list=0x603cc0, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
87				else if(node->priority == 1) {q1 = insert(node, q1); q1num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
111			if(serving != NULL){
120			while(serving != NULL && serving->next != NULL ){
141			serving = servingcpy;
142			if(serving != NULL && serving->subnum == 0){
148			q0cpy = q0;
149			q1cpy = q1;
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
180					node = createnode(q1->artime, q1->priority, q1->subnum, q1->dur, q1->detime);
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
185					q1wait += t - node->artime;
187					serving = insert(node, serving);
188					s -= q1->subnum;
189					q1 = q1->next;
190					q1cpy = q1;
179				else if(q1 != NULL && s >= q1->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
208				else if (q1 == NULL || q1->next == NULL) break;
212			q0 = q0cpy;
213			q1 = q1cpy;
215			if(serving == NULL && list == NULL && q1 == NULL && q0 == NULL) break;
216			t++;
217		}
77			if(list != NULL && list->artime == t){
78				slength += qcount(q0,q1);
79				peeks ++;

Breakpoint 2, simulation (list=0x603f00, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
111			if(serving != NULL){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
114						s++;
116							serving->subnum--;
112				for(ind = 0; ind < serving->inisubnum; ++ind){
120			while(serving != NULL && serving->next != NULL ){
141			serving = servingcpy;
142			if(serving != NULL && serving->subnum == 0){
148			q0cpy = q0;
149			q1cpy = q1;
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
152					node = createnode(q0->artime, q0->priority, q0->subnum, q0->dur, q0->detime);
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
157					q0wait += t - node->artime;
159					serving = insert(node, serving);
160					s -= q0->subnum;
161					q0 = q0->next;
162					q0cpy = q0;
151				if(q0 != NULL && s >= q0->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
208				else if (q1 == NULL || q1->next == NULL) break;
212			q0 = q0cpy;
213			q1 = q1cpy;
215			if(serving == NULL && list == NULL && q1 == NULL && q0 == NULL) break;
216			t++;
217		}
77			if(list != NULL && list->artime == t){
78				slength += qcount(q0,q1);
79				peeks ++;

Breakpoint 2, simulation (list=0x603d50, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
87				else if(node->priority == 1) {q1 = insert(node, q1); q1num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
111			if(serving != NULL){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
114						s++;
116							serving->subnum--;
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
$1 = 3
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
114						s++;
116							serving->subnum--;
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
141			serving = servingcpy;
142			if(serving != NULL && serving->subnum == 0){
148			q0cpy = q0;
149			q1cpy = q1;
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
180					node = createnode(q1->artime, q1->priority, q1->subnum, q1->dur, q1->detime);
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
185					q1wait += t - node->artime;
187					serving = insert(node, serving);
188					s -= q1->subnum;
189					q1 = q1->next;
190					q1cpy = q1;
179				else if(q1 != NULL && s >= q1->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
208				else if (q1 == NULL || q1->next == NULL) break;
212			q0 = q0cpy;
213			q1 = q1cpy;
215			if(serving == NULL && list == NULL && q1 == NULL && q0 == NULL) break;
216			t++;
217		}
77			if(list != NULL && list->artime == t){
78				slength += qcount(q0,q1);
79				peeks ++;

Breakpoint 2, simulation (list=0x604300, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
87				else if(node->priority == 1) {q1 = insert(node, q1); q1num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
111			if(serving != NULL){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
141			serving = servingcpy;
142			if(serving != NULL && serving->subnum == 0){
148			q0cpy = q0;
149			q1cpy = q1;
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
180					node = createnode(q1->artime, q1->priority, q1->subnum, q1->dur, q1->detime);
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
182						node->detime[ind] = t + node->dur[ind];
181					for(ind = 0; ind< node->subnum; ind++){
185					q1wait += t - node->artime;
187					serving = insert(node, serving);
188					s -= q1->subnum;
189					q1 = q1->next;
190					q1cpy = q1;
179				else if(q1 != NULL && s >= q1->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
208				else if (q1 == NULL || q1->next == NULL) break;
212			q0 = q0cpy;
213			q1 = q1cpy;
215			if(serving == NULL && list == NULL && q1 == NULL && q0 == NULL) break;
216			t++;
217		}
77			if(list != NULL && list->artime == t){
78				slength += qcount(q0,q1);
79				peeks ++;

Breakpoint 2, simulation (list=0x604120, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
87				else if(node->priority == 1) {q1 = insert(node, q1); q1num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
111			if(serving != NULL){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
114						s++;
116							serving->subnum--;
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
114						s++;
116							serving->subnum--;
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
$2 = 5
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
141			serving = servingcpy;
142			if(serving != NULL && serving->subnum == 0){
148			q0cpy = q0;
149			q1cpy = q1;
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
208				else if (q1 == NULL || q1->next == NULL) break;
212			q0 = q0cpy;
213			q1 = q1cpy;
215			if(serving == NULL && list == NULL && q1 == NULL && q0 == NULL) break;
216			t++;
217		}
77			if(list != NULL && list->artime == t){
78				slength += qcount(q0,q1);
79				peeks ++;

Breakpoint 2, simulation (list=0x604610, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
111			if(serving != NULL){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
114						s++;
116							serving->subnum--;
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
141			serving = servingcpy;
142			if(serving != NULL && serving->subnum == 0){
148			q0cpy = q0;
149			q1cpy = q1;
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
152					node = createnode(q0->artime, q0->priority, q0->subnum, q0->dur, q0->detime);
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
157					q0wait += t - node->artime;
159					serving = insert(node, serving);
160					s -= q0->subnum;
161					q0 = q0->next;
162					q0cpy = q0;
151				if(q0 != NULL && s >= q0->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
208				else if (q1 == NULL || q1->next == NULL) break;
212			q0 = q0cpy;
213			q1 = q1cpy;
215			if(serving == NULL && list == NULL && q1 == NULL && q0 == NULL) break;
216			t++;
217		}
77			if(list != NULL && list->artime == t){
78				slength += qcount(q0,q1);
79				peeks ++;

Breakpoint 2, simulation (list=0x6043a0, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
87				else if(node->priority == 1) {q1 = insert(node, q1); q1num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
111			if(serving != NULL){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
141			serving = servingcpy;
142			if(serving != NULL && serving->subnum == 0){
148			q0cpy = q0;
149			q1cpy = q1;
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
196					node = createnode(q1->next->artime,q1->next->priority, q1->next->subnum, q1->next->dur, q1->next->detime);
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
201					q1wait += t - node->artime;
203					serving = insert(node, serving);
204					s -= q1->next->subnum;
205					q1->next = q1->next->next;
206					free(q1->next);
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
208				else if (q1 == NULL || q1->next == NULL) break;
212			q0 = q0cpy;
213			q1 = q1cpy;
215			if(serving == NULL && list == NULL && q1 == NULL && q0 == NULL) break;
216			t++;
$3 = 7
217		}
77			if(list != NULL && list->artime == t){
78				slength += qcount(q0,q1);
79				peeks ++;

Breakpoint 2, simulation (list=0x6046c0, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
87				else if(node->priority == 1) {q1 = insert(node, q1); q1num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
111			if(serving != NULL){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
$4 = 8
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
141			serving = servingcpy;
142			if(serving != NULL && serving->subnum == 0){
148			q0cpy = q0;
149			q1cpy = q1;
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
196					node = createnode(q1->next->artime,q1->next->priority, q1->next->subnum, q1->next->dur, q1->next->detime);
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
198						node->detime[ind] = t + node->dur[ind];
197					for(ind = 0; ind < node->subnum; ind++){
201					q1wait += t - node->artime;
203					serving = insert(node, serving);
204					s -= q1->next->subnum;
205					q1->next = q1->next->next;
206					free(q1->next);
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
208				else if (q1 == NULL || q1->next == NULL) break;
212			q0 = q0cpy;
213			q1 = q1cpy;
215			if(serving == NULL && list == NULL && q1 == NULL && q0 == NULL) break;
216			t++;
217		}
77			if(list != NULL && list->artime == t){
78				slength += qcount(q0,q1);
79				peeks ++;

Breakpoint 2, simulation (list=0x604a40, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
87				else if(node->priority == 1) {q1 = insert(node, q1); q1num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
111			if(serving != NULL){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
141			serving = servingcpy;
142			if(serving != NULL && serving->subnum == 0){
148			q0cpy = q0;
149			q1cpy = q1;
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
193					q1 = q1->next;
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
208				else if (q1 == NULL || q1->next == NULL) break;
212			q0 = q0cpy;
213			q1 = q1cpy;
215			if(serving == NULL && list == NULL && q1 == NULL && q0 == NULL) break;
216			t++;
217		}
77			if(list != NULL && list->artime == t){
78				slength += qcount(q0,q1);
79				peeks ++;

Breakpoint 2, simulation (list=0x604b80, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
111			if(serving != NULL){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
141			serving = servingcpy;
142			if(serving != NULL && serving->subnum == 0){
148			q0cpy = q0;
149			q1cpy = q1;
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
152					node = createnode(q0->artime, q0->priority, q0->subnum, q0->dur, q0->detime);
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
157					q0wait += t - node->artime;
159					serving = insert(node, serving);
160					s -= q0->subnum;
161					q0 = q0->next;
162					q0cpy = q0;
151				if(q0 != NULL && s >= q0->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
193					q1 = q1->next;
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
208				else if (q1 == NULL || q1->next == NULL) break;
212			q0 = q0cpy;
213			q1 = q1cpy;
215			if(serving == NULL && list == NULL && q1 == NULL && q0 == NULL) break;
216			t++;
217		}
77			if(list != NULL && list->artime == t){
78				slength += qcount(q0,q1);
79				peeks ++;

Breakpoint 2, simulation (list=0x6048c0, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
87				else if(node->priority == 1) {q1 = insert(node, q1); q1num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
111			if(serving != NULL){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
$5 = 11
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
141			serving = servingcpy;
142			if(serving != NULL && serving->subnum == 0){
148			q0cpy = q0;
149			q1cpy = q1;
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
193					q1 = q1->next;
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
193					q1 = q1->next;
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
208				else if (q1 == NULL || q1->next == NULL) break;
212			q0 = q0cpy;
213			q1 = q1cpy;
215			if(serving == NULL && list == NULL && q1 == NULL && q0 == NULL) break;
216			t++;
217		}
77			if(list != NULL && list->artime == t){
78				slength += qcount(q0,q1);
79				peeks ++;

Breakpoint 2, simulation (list=0x6048f0, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
$6 = 12
$7 = {artime = 1, priority = 1, subnum = 1, inisubnum = 7, dur = 0x603bf0, detime = 0x603c30, next = 0x605070}
$8 = {artime = 2, priority = 0, subnum = 2, inisubnum = 12, dur = 0x603e20, detime = 0x603e70, next = 0x605160}
$9 = {artime = 3, priority = 1, subnum = 4, inisubnum = 15, dur = 0x603a30, detime = 0x603fd0, next = 0x6051c0}
$10 = {artime = 4, priority = 1, subnum = 2, inisubnum = 25, dur = 0x6041f0, detime = 0x604270, next = 0x605250}
$11 = 9
$12 = 10
$13 = 7
$14 = 15
$15 = {artime = 6, priority = 0, subnum = 6, inisubnum = 18, dur = 0x6043f0, detime = 0x604580, next = 0x6052b0}
$16 = {artime = 7, priority = 1, subnum = 12, inisubnum = 20, dur = 0x604330, detime = 0x604710, next = 0x605310}
$17 = {artime = 8, priority = 1, subnum = 4, inisubnum = 5, dur = 0x604690, detime = 0x6047a0, next = 0x6053a0}
$18 = {artime = 10, priority = 0, subnum = 24, inisubnum = 26, dur = 0x604a70, detime = 0x604af0, next = 0x0}
Cannot access memory at address 0x0
111			if(serving != NULL){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
124							s++;
125							serving->next->subnum--;
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
133				else if(serving->next != NULL && serving->next->subnum !=0){
134					serving = serving -> next;
133				else if(serving->next != NULL && serving->next->subnum !=0){
120			while(serving != NULL && serving->next != NULL ){
141			serving = servingcpy;
142			if(serving != NULL && serving->subnum == 0){
148			q0cpy = q0;
149			q1cpy = q1;
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
152					node = createnode(q0->artime, q0->priority, q0->subnum, q0->dur, q0->detime);
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
154						node->detime[ind] = t + node->dur[ind];
153					for(ind = 0; ind < node->subnum; ind++){
157					q0wait += t - node->artime;
159					serving = insert(node, serving);
160					s -= q0->subnum;
161					q0 = q0->next;
162					q0cpy = q0;
151				if(q0 != NULL && s >= q0->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
193					q1 = q1->next;
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
193					q1 = q1->next;
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
150			while (s > 0){
151				if(q0 != NULL && s >= q0->subnum){
164				else if(q0 != NULL && q0->next != NULL && s < q0->next->subnum){
167				else if(q0 != NULL && q0->next != NULL && s >= q0->next->subnum){
179				else if(q1 != NULL && s >= q1->subnum){
192				else if(q1 != NULL && q1->next != NULL && s < q1->next->subnum){
195				else if(q1 != NULL && q1->next != NULL && s >= q1->next->subnum){
208				else if (q1 == NULL || q1->next == NULL) break;
212			q0 = q0cpy;
213			q1 = q1cpy;
215			if(serving == NULL && list == NULL && q1 == NULL && q0 == NULL) break;
216			t++;
217		}
77			if(list != NULL && list->artime == t){
78				slength += qcount(q0,q1);
79				peeks ++;

Breakpoint 2, simulation (list=0x604c20, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
84				node = createnode(list->artime, list->priority, list->subnum, list->dur, list->detime);
85				list = list->next;
86				if(node->priority == 0) {q0 = insert(node, q0); q0num ++;}
82			while (list != NULL && list->artime == t){
110			Node* servingcpy = serving;
111			if(serving != NULL){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
114						s++;
116							serving->subnum--;
112				for(ind = 0; ind < serving->inisubnum; ++ind){
113					if((serving->detime)[ind] == t){
112				for(ind = 0; ind < serving->inisubnum; ++ind){
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
129				if(serving->subnum == 0){
130					serving = serving ->next;
131					servingcpy = serving;
120			while(serving != NULL && serving->next != NULL ){
121				if(serving->next != NULL){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
122					for(ind = 0; ind < serving->next->inisubnum; ++ind){
123						if(serving->next->detime[ind] == t){
Continuing.

Breakpoint 2, simulation (list=0x604e80, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
Continuing.

Breakpoint 2, simulation (list=0x604e40, avg=0.55411255411255411) at p.c:82
82			while (list != NULL && list->artime == t){
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x0000000000401393 in simulation (list=0x0, avg=0.55411255411255411) at p.c:204
204					s -= q1->next->subnum;
Continuing.

Program terminated with signal SIGSEGV, Segmentation fault.
The program no longer exists.
The program is not being run.
The program is not being run.
Hangup detected on fd 0
Error detected on fd 0
error detected on stdin
